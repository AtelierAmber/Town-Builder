<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get the input stored into values
GetInput();
speedUp = 0;
currentSpeed = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Input
GetInput();

/* Global Input */
if(key_speedTime){
    ++speedUp;
    if(speedUp &gt; 3){
        speedUp = 0;
    }
    switch(speedUp){
    case 0:
        SlowTime(currentSpeed);
        break;
    case 1:
        currentSpeed = 250;
        SpeedTime(currentSpeed);
        break;
    case 2:
        SlowTime(currentSpeed);
        currentSpeed = 500;
        SpeedTime(currentSpeed);
        break
    case 3:
        SlowTime(currentSpeed);
        currentSpeed = 1000;
        SpeedTime(currentSpeed);
        break;
    default:
        break;
    }
}

if(scrollDown){
    view_wview[view_current] += 5;
    view_hview[view_current] += 5;
}
if(scrollUp){
    view_wview[view_current] -= 5;
    view_hview[view_current] -= 5;
}

if(moveUp){
    view_yview[view_current] -= 5;
}
if(moveDown){
    view_yview[view_current] += 5;
}
if(moveRight){
    view_xview[view_current] += 5;
}
if(moveLeft){
    view_xview[view_current] -= 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
